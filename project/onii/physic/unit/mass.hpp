#ifndef ONII_PHYSIC_UNIT_MASS_HPP
#define ONII_PHYSIC_UNIT_MASS_HPP

/////////////////////////////////////////////////
/// @file onii/physic/unit/mass.hpp
/////////////////////////////////////////////////

#include "detail/unit_base.hpp"

/////////////////////////////////////////////////
/// @namespace onii
/////////////////////////////////////////////////
namespace onii
{
/////////////////////////////////////////////////
/// @namespace onii::physic
/////////////////////////////////////////////////
namespace physic
{
/////////////////////////////////////////////////
/// @namespace onii::physic::unit
/////////////////////////////////////////////////
namespace unit
{
/////////////////////////////////////////////////
/// @class mass
/////////////////////////////////////////////////
class mass :
    public detail::unit_base<mass, float>
{
public:

    /////////////////////////////////////////////////
    /// @brief Mass type
    /////////////////////////////////////////////////
    typedef float mass_type;

    /////////////////////////////////////////////////
    /// @brief Constructor
    ///
    /// @param kilogram - the mass in kilogram
    /////////////////////////////////////////////////
    mass(mass_type kilogram = 0.f) :
        unit_base(kilogram)
    {}

    /////////////////////////////////////////////////
    /// @brief Get the mass in gram
    ///
    /// @return The mass in gram
    /////////////////////////////////////////////////
    mass_type g() const
    {
        return kg() * 1000.f;
    }

    /////////////////////////////////////////////////
    /// @brief Get the mass in kilogram
    ///
    /// @return The mass in kilogram
    /////////////////////////////////////////////////
    mass_type kg() const
    {
        return m_value;
    }

    /////////////////////////////////////////////////
    /// @brief Get the mass in tonne
    ///
    /// @return The mass in tonne
    /////////////////////////////////////////////////
    mass_type t() const
    {
        return kg() / 1000.f;
    }

    /////////////////////////////////////////////////
    /// @brief Create a mass instance from gram
    ///
    /// @param gram - the mass in gram
    /// @return The new mass instance
    /////////////////////////////////////////////////
    static mass g(mass_type gram)
    {
        return kg(gram / 1000.f);
    }

    /////////////////////////////////////////////////
    /// @brief Create a mass instance from kilogram
    ///
    /// @param kilogram - the mass in kilogram
    /// @return The new mass instance
    /////////////////////////////////////////////////
    static mass kg(mass_type kilogram)
    {
        return {kilogram};
    }

    /////////////////////////////////////////////////
    /// @brief Create a mass instance from tonne
    ///
    /// @param tonne - the mass in tonne
    /// @return The new mass instance
    /////////////////////////////////////////////////
    static mass t(mass_type tonne)
    {
        return kg(tonne * 1000.f);
    }
};
} // namespace unit
} // namespace physic
} // namespace onii

#endif // ONII_PHYSIC_UNIT_MASS_HPP
